<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ReviewMapper">
  	<!-- 음식점 리뷰 목록 -->
   <select id="r_totalCount" resultType="int">
     select count(*)
     from restaurant_reviews
   </select>
   <select id="r_reviewList"  resultType="ReviewDTO">
     select review_id, res_id, user_id, rating, review_content, like_cnt,
				     to_char(created_date, 'YYYY/MM/dd') as created_date,
				     to_char(modified_date, 'YYYY/MM/dd') as modified_date
     from restaurant_reviews
     order by review_id desc
   </select>
   <!-- 숙소 리뷰 목록 -->
   <select id="l_totalCount" resultType="int">
     select count(*)
     from lodging_reviews
   </select>
   <select id="l_reviewList"  resultType="ReviewDTO">
     select review_id, lodging_id, user_id, rating, review_content, like_cnt,
				     to_char(created_date, 'YYYY/MM/dd') as created_date,
				     to_char(modified_date, 'YYYY/MM/dd') as modified_date
     from lodging_reviews
     order by review_id desc
   </select>
   <!-- 음식점 리뷰 등록 -->
   <insert id="reviewWrite" parameterType="ReviewDTO">
	   insert into restaurant_reviews (res_id, user_id, rating, review_content)
	   values (#{res_id}, #{user_id}, #{rating}, #{review_content})
   </insert>
	 <!-- 리뷰 수정 -->
   <update id="reviewUpdate" parameterType="ReviewDTO">
   	 update restaurant_reviews
   	 set review_content = #{review_content}, rating=#{rating}, modified_date = sysdate
   	 where review_id = #{review_id}
   </update>
   <!-- 리뷰 상세보기 -->
   <select id="reviewRetrieve" parameterType="string" resultType="ReviewDTO">
      select *
      from restaurant_reviews
      where review_id = #{review_id}
   </select>
   <!-- 리뷰 삭제 -->
	 <delete id="reviewDelete" parameterType="int">
     delete from restaurant_reviews
     where review_id = #{review_id}
   </delete>
</mapper>